import streamlit as st  # type: ignore
import numpy as np  # type: ignore

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è —á–µ—Ä–µ–∑ HTML –∏ CSS –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UI
def add_custom_styles():
    st.markdown("""
        <style>
            .header-title {
                font-size: 32px;
                font-weight: bold;
                color: #4CAF50;
                text-align: center;
                margin-bottom: 20px;
            }
            .sub-header {
                font-size: 24px;
                font-weight: bold;
                color: #007BFF;
                margin-top: 20px;
                margin-bottom: 10px;
            }
            .box {
                padding: 10px;
                background-color: #f9f9f9;
                border-radius: 10px;
                box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
                margin-bottom: 20px;
            }
            .result-box {
                padding: 10px;
                background-color: #E8F5E9;
                border-radius: 10px;
                box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
                margin-bottom: 20px;
            }
            .error-box {
                color: #FF0000;
                font-size: 18px;
                font-weight: bold;
            }
            .success-box {
                color: #4CAF50;
                font-size: 18px;
                font-weight: bold;
            }
        </style>
    """, unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–∏–±—ã–ª–∏ –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç—É
def calculate_profit(current_deposit, trade_size, take_profit_percent, sell_percent):
    price_increase = (take_profit_percent / 100) * trade_size
    profit = price_increase * (sell_percent / 100)
    return current_deposit + profit

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —É–±—ã—Ç–∫–∞ –ø–æ —Å—Ç–æ–ø-–ª–æ—Å—Å—É
def calculate_stop_loss(deposit, trade_size, stop_loss_percent):
    loss = (stop_loss_percent / 100) * trade_size
    return max(deposit - loss, 0)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤
def validate_take_profits(take_profits):
    total_sell_percent = sum(tp["sell_percent"] for tp in take_profits)
    if total_sell_percent > 100:
        excess = total_sell_percent - 100
        return False, f"–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π –ø—Ä–µ–≤—ã—à–∞–µ—Ç 100% –Ω–∞ {excess:.2f}%."
    return True, ""

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
def main():
    add_custom_styles()  # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
    st.markdown('<div class="header-title">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤ –∏ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞</div>', unsafe_allow_html=True)

    st.markdown('<div class="sub-header">üìä –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–¥–µ–ª–∫–∏</div>', unsafe_allow_html=True)
    with st.expander("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏ üíº"):  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ st.expander
        trade_size = st.number_input("–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ ($)", value=5000, min_value=1000, step=100)
        deposit = st.number_input("–í–∞—à –¥–µ–ø–æ–∑–∏—Ç ($)", value=1000, min_value=100)
        stop_loss_percent = st.number_input("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ (%)", min_value=0.1, max_value=50.0, value=1.48, step=0.1)

    st.markdown('<div class="sub-header">üéØ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç—ã</div>', unsafe_allow_html=True)
    num_take_profits = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤", min_value=1, max_value=10, value=7, step=1)

    take_profits = []
    st.markdown('<div class="box">', unsafe_allow_html=True)
    for i in range(num_take_profits):
        take_profit_percent = st.number_input(f"–ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ {i + 1}-–≥–æ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞", min_value=0.1, max_value=100.0, value=1.67 + i, step=0.1, key=f"tp_percent_{i}")
        sell_percent = st.number_input(f"–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞ {i + 1}-–º —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–µ", min_value=1.0, max_value=100.0, value=20.0 if i < 3 else 10.0, step=1.0, key=f"tp_sell_{i}")
        take_profits.append({"take_profit_percent": take_profit_percent, "sell_percent": sell_percent})
    st.markdown('</div>', unsafe_allow_html=True)

    is_valid, error_message = validate_take_profits(take_profits)
    if not is_valid:
        st.markdown(f'<div class="error-box">{error_message}</div>', unsafe_allow_html=True)
        return

    st.markdown('<div class="sub-header">üíµ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤</div>', unsafe_allow_html=True)
    results = []
    current_deposit = deposit
    for i, tp in enumerate(take_profits):
        before_profit = current_deposit
        current_deposit = calculate_profit(current_deposit, trade_size, tp["take_profit_percent"], tp["sell_percent"])
        results.append({"–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç": f"–ù–∞ —É—Ä–æ–≤–Ω–µ {tp['take_profit_percent']}%", "–î–æ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞": before_profit, "–ü–æ—Å–ª–µ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞": current_deposit})

    st.markdown('<div class="result-box">', unsafe_allow_html=True)
    st.table(results)
    st.markdown('</div>', unsafe_allow_html=True)

    deposit_after_stop_loss = calculate_stop_loss(deposit, trade_size, stop_loss_percent)
    st.markdown(f'<div class="success-box">–ü–æ—Å–ª–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Å—Ç–æ–ø-–ª–æ—Å—Å–∞, –µ—Å–ª–∏ —Ü–µ–Ω–∞ —Å–Ω–∏–∑–∏—Ç—Å—è –Ω–∞ {stop_loss_percent}%, –≤–∞—à –¥–µ–ø–æ–∑–∏—Ç –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω: ${deposit_after_stop_loss:.2f}</div>', unsafe_allow_html=True)

if __name__ == "__main__":
    main()
